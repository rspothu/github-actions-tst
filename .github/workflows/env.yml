name: ENV Variables
on: push
env:
  WF_ENV: ${{ secrets.GITHUB_TOKEN }}

jobs:
  dump_contexts_to_log:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo111 '${{ toJSON(github) }}'
      - name: Dump job context
        if: failure()
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        if: always()
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
  # decrypt:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Decrypt file
  #       env: 
  #         PASSPHRASE: ${{secrets.passphrase}}
  #       run: gpg --quiet --batch --yes --decrypt --passphrase="$PASSPHRASE" --output $HOME/secrets.json secrets_env.json.gpg
  #     - name: Print file contents
  #       run: 
  #         cat $HOME/secrets.json
  # create_issue:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Push a random files
  #       run: |
  #         pwd
  #         ls -a
  #         git init
  #         git remote add origin "https://$GITHUB_ACTOR:${{secrets.GITHUB_TOKEN}}@github.com/$GITHUB_REPOSITORY.git"
  #         git config --global user.name "rspothu"
  #         git config --global user.email "rspothu@gmail.com"
  #         git fetch
  #         git checkout master
  #         git branch --set-upstream-to=origin/master
  #         git pull
  #         ls -a
  #         echo $RANDOM >> random.txt
  #         ls -a
  #         git add -A
  #         git commit -m "Random file"
  #         git push
  #     - name: Create issue using REST API
  #       run: |
  #         curl --request POST \
  #         --url https://api.github.com/repos/${{ github.repository }}/issues \
  #         --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
  #         --header 'content-type: application/json' \
  #         --data '{
  #           "title": "Automated issue for commit: ${{ github.sha }}",
  #           "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
  #           }' \

  # log-env:
  #   runs-on: ubuntu-latest
  #   env:
  #     JOB_ENV: Only to all steps
  #   steps:
  #     - name: Log ENV Variables
  #       env: 
  #         STEP_ENV: Only to this step
  #       run: |
  #         echo "WF_ENV : ${WF_ENV}"
  #         echo "JOB_ENV : ${JOB_ENV}"
  #         echo "STEP_ENV : ${STEP_ENV}"
  #     - name: Log ENV 2
  #       run: |
  #         echo "WF_ENV : ${WF_ENV}"
  #         echo "JOB_ENV : ${JOB_ENV}"
  #         echo "STEP_ENV : ${STEP_ENV}"

  # log-default-view:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Default env varialbes
  #       run: |
  #         echo "HOME : ${HOME}"
  #         echo "GITHUB_WORKFLOW : ${GITHUB_WORKFLOW}"
  #         echo "GITHUB_ACTION : ${GITHUB_ACTION}"
  #         echo "GITHUB_ACTIONS : ${GITHUB_ACTIONS}"
  #         echo "GITHUB_ACTOR : ${GITHUB_ACTOR}"
  #         echo "GITHUB_REPOSITORY : ${GITHUB_REPOSITORY}"
  #         echo "GITHUB_EVENT_NAME : ${GITHUB_EVENT_NAME}"
  #         echo "GITHUB_WORKSPACE : ${GITHUB_WORKSPACE}"
  #         echo "GITHUB_SHA : ${GITHUB_SHA}"
  #         echo "GITHUB_REF : ${GITHUB_REF}"
  #         echo "WF_ENV : ${WF_ENV}"
  #         echo "JOB_ENV : ${JOB_ENV}"
  #         echo "STEP_ENV : ${STEP_ENV}"